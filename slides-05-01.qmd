---
title: "more expressions (slides)"
format: revealjs
slide-number: true
---

# CSc 110 More expressions

## Review of arithmetic operations

-   `+` : plus 

-   `-` : minus

-   `*` : multiple

-   `/` : divide

-   `**` : power

-  `//` : divide and floor

-  `%` : modulos
   
<br />

## Review of previous expressions

Evaluate the expressions below:

```{python}
#| echo: true
#| eval: false
4 * 4 / 2 % 2
( 2 + 3 ) / ( 2 - 1.5)
3**3 // 7
5**2 + 25**0.5
```

## Review of previous expressions

Evaluate the expressions below:

```{python}
#| echo: true
#| eval: true
4 * 4 / 2 % 2
```


```{python}
#| echo: true
#| eval: true
( 2 + 3 ) / ( 2 - 1.5)
```


```{python}
#| echo: true
#| eval: true
3**3 // 7
```


```{python}
#| echo: true
#| eval: true
5**2 + 25**0.5
```


## Comparisons

-   What will be the result of the following expressions:

```{python}
#| eval: false
#| echo: true
8 == 7
8 < 7
8 > 7
```

-   What are the other comparison operators?

## Comparisons

Expressions with comparisons operators are evaluated to `True` or `False`

-   `==` equal
-   `!=` different
-   `>=` greater or equal
-   `>` greater
-   `<=` less or equal
-   `<` less


## Write a function

1. Its name is `odd` and it takes one integer argument `n`
1. It **returns** `True` if `n` is odd, `False` if `n` is even

```{python}
#| eval: false
#| echo: true
print( odd(10) ) # False
print( odd(5) ) # True
print( odd(0) ) # False
```


## Write a function -- solution

```{python}
#| eval: true
#| echo: true
def odd(n):
  return n % 2 == 1

def main():
  print( odd(10) ) # False
  print( odd(5) ) # True
  print( odd(0) ) # False
  
main()
```


## Arithmetic vs Comparison Operators

Arithmetic Operators:

-   `(expressions...)`, `**`, `*`, `/`, `//`, `%`, `+`, `-` 

Comparison Operators:

-   `==`, `!=`, `>=`, `>`, `<=`, `<` 

Order of operations: arithmetic operators come before comparison operators.


## Evaluate the expressions

Evaluation the expressions on your whiteboard.
```{python}
#| eval: false
#| echo: true
3**2 < 25**0.5
9 % 3 == 8 % 2
10 // 3 > 9 // 3
14 % 2 != 15 % 2
```

## Evaluate the expressions - answers

Evaluation the expressions on your whiteboard.
```{python}
#| eval: true
#| echo: true
print(3**2 < 25**0.5)
print(9 % 3 == 8 % 2)
print(10 // 3 > 9 // 3)
print(14 % 2 != 15 % 2)
```

## Evaluation order

-   `(expressions...)`

-   `**` : Exponentiation

-   `*, /, //, %` : Multiplication, Division, Floor Division and Remainder

-   `+, -` : Addition and subtraction

-   `<, <=, >, >=, !=, ==` : Comparisons

-   `not x` : Boolean NOT

-   `and` : Boolean AND

-   `or` : Boolean OR

## not

| Expression    | Result |
| -------- | :-------: |
| not True  | False   |
| not False | True    |

## and

| Expression    | Result |
| -------- | :-------: |
| True and True  | True   |
| False  and True | False    |
| True  and False | False    |
| False and False  | False   |

## or

| Expression    | Result |
| -------- | :-------: |
| True or True  | True   |
| False  or True | True    |
| True  or False | True    |
| False or False  | False   |


## Evaluate the expressions

```{python}
#| eval: false
#| echo: true
not 2**3 == 8 and 4 % 2 == 0
25*0.5 > 5**2 or 4 <= 2**2
4 % 2 == 0 or 4 // 0 == 0
4 % 2 != 1
not 0
not 1
```


## Evaluate the expressions

```{python}
#| eval: true
#| echo: true
not 2**3 == 8 and 4 % 2 == 0
```

```{python}
#| eval: true
#| echo: true
25*0.5 > 5**2 or 4 <= 2**2
```

```{python}
#| eval: true
#| echo: true
4 % 2 == 0 or 4 // 0 == 0
```

```{python}
#| eval: true
#| echo: true
4 % 2 != 1
```

```{python}
#| eval: true
#| echo: true
not 0
```

```{python}
#| eval: true
#| echo: true
not 1
```

