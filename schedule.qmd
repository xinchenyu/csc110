---
title: "Schedule"
---

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
schedule <- read_excel("schedule.xlsx") %>% 
  mutate(formatted_date = format(date, "%A, %B %d, %Y"),
         formatted_start = format(week_start, "%b %d"))

assignments <- read_excel("assessment_schedule.xlsx") %>% 
  mutate(formatted_date = format(due_date, "%A, %B %d, %Y"))
```

# Exam Dates

Weekly quizzes will always be on Wednesday (when there's no other evaluations) in class (pencil and paper format).

Midterm (individual) exams (pencil and paper format):

-   Midterm Exam 1 - `r schedule %>% filter(exam == "Midterm 1" & term == "fall 2025") %>% pull(formatted_date)`
-   Midterm Exam 2 - `r schedule %>% filter(exam == "Midterm 2" & term == "fall 2025") %>% pull(formatted_date)`

The final exam date and time is: `r schedule %>% filter(exam == "Final Exam" & term == "fall 2025") %>% pull(formatted_date)` -- `r schedule %>% filter(exam == "Final Exam" & term == "fall 2025") %>% pull(time)`

You must keep this time available. Do not schedule any flights, travel plans, or other conflicts with these exams.

All assignments that are submitted on Gradescope are due at 9pm (Wednesdays for programming problems, short projects and Fridays for programming projects).


# Week 1 (`r schedule %>% filter(week_number == 1 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 01 (`r assignments %>% filter(assessment == "Quiz 01") %>% pull(formatted_date)`)

## Readings

-   [Hello World!](hello.html)
-   [Constants, Variables, and comments](basics.html)

## Class slides

-   [Course Introduction](slides-01-01.html)
-   [Python Basics](slides-01-02.html)

## Assignments

-   [Module 1 Programming Problems](assignments-01.html) -- Due date: `r assignments %>% filter(assessment == "Module 1 Programming Problems") %>% pull(formatted_date)` at 9pm

# Week 2 (`r schedule %>% filter(week_number == 2 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 02 (`r assignments %>% filter(assessment == "Quiz 02") %>% pull(formatted_date)`)

## Readings

-   [Intro to Functions](functions-a.html)
-   [Operators and Expressions](op_exp-a.html)

## Class slides

-   [Operations](slides-02-01.html)
-   [Functions](slides-02-02.html)

## Assignments

-   [Module 2 Programming Problems](assignments-02.html) -- Due date: `r assignments %>% filter(assessment == "Module 2 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 1](labs/lab01.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 1") %>% pull(formatted_date)` at 9pm
-   [Programming Project 1](project-1.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 1") %>% pull(formatted_date)` at 9pm

# Week 3 (`r schedule %>% filter(week_number == 3 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 03 (`r assignments %>% filter(assessment == "Quiz 03") %>% pull(formatted_date)`)

## Readings

-   [More on Functions](functions.html)

## Class slides

-   [decomposition](slides-03-01.html)
-   [More on Functions](slides-03-02.html)

## Assignments

-   [Module 3 Programming Problems](assignments-03.html) -- Due date: `r assignments %>% filter(assessment == "Module 3 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 2](labs/lab02.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 2") %>% pull(formatted_date)` at 9pm
-   [Programming Project 2](project-2.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 2") %>% pull(formatted_date)` at 9pm


# Week 4 (`r schedule %>% filter(week_number == 4 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 04 (`r assignments %>% filter(assessment == "Quiz 04") %>% pull(formatted_date)`)

## Readings

-   [Input from user](input.html)

## Class slides

-   [Built-in Python Functions](slides-04-01.html)
-   [More on Decomposition](slides-04-02.html)

## Assignments

-   [Module 4 Programming Problems](assignments-04.html) -- Due date: `r assignments %>% filter(assessment == "Module 4 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 3](labs/lab03.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 3") %>% pull(formatted_date)` at 9pm
-   [Programming Project 3](project-3.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 3") %>% pull(formatted_date)` at 9pm


# Week 5 (`r schedule %>% filter(week_number == 5 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 05 (`r assignments %>% filter(assessment == "Quiz 05") %>% pull(formatted_date)`)

## Readings/Video

-   [More on Operators and Expressions](op_exp.html)
-   [If statements](control_flow_if.html)
-   [FizzBuzz problem](fizzbuzz.html)

## Class slides

-   [More expressions](slides-05-01.html)
-   [If statements](slides-05-02.html)
-   [if elif else](slides-05-03.html)

## Assignments

-   [Module 5 Programming Problems](assignments-05.html) -- Due date: `r assignments %>% filter(assessment == "Module 5 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 4](labs/lab04.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 4") %>% pull(formatted_date)` at 9pm
-   [Programming Project 4](project-4.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 4") %>% pull(formatted_date)` at 9pm



# Week 6 (`r schedule %>% filter(week_number == 6 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 06 (`r assignments %>% filter(assessment == "Quiz 06") %>% pull(formatted_date)`)

## Readings

-   [String Manipulations](strings.html)
-   [While loops](control_flow_while.html)

## Class slides

-   [string manipulation](slides-06-01.html)
-   [while loops](slides-06-02.html)
-   [while loop aggregation](slides-06-03)

## Assignments

-   [Module 6 Programming Problems](assignments-06.html) -- Due date: `r assignments %>% filter(assessment == "Module 6 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 5](labs/lab05.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 5") %>% pull(formatted_date)` at 9pm
-   [Programming Project 5](project-5.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 5") %>% pull(formatted_date)` at 9pm


# Week 7 (`r schedule %>% filter(week_number == 7 & term == "fall 2025") %>% pull(formatted_start)`)

## Midterm 1 (`r assignments %>% filter(assessment == "Midterm 1") %>% pull(formatted_date)`)

## Readings

-   [Lists](data_structures_list.html)

## Class slides

-   [Lists](slides-07-01.html)
-   [Lists + while loops](slides-07-02.html)

## Assignments

-   [Module 7 Programming Problems](assignments-07.html) -- Due date: `r assignments %>% filter(assessment == "Module 7 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 6](labs/lab06.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 6") %>% pull(formatted_date)` at 9pm
-   [Programming Project 6](project-6.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 6") %>% pull(formatted_date)` at 9pm


# Week 8 (`r schedule %>% filter(week_number == 8 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 07 (`r assignments %>% filter(assessment == "Quiz 07") %>% pull(formatted_date)`)

## Readings

-   [Mutability](mutability.html)
-   [For loops](control_flow_for.html)

## Class slides

-   [mutability](slides-08-01.html)
-   [for loops with range](slides-08-02.html)
-   [module random](slides-08-03.html)

## Assignments

-   [Module 8 Programming Problems](assignments-08.html) -- Due date: `r assignments %>% filter(assessment == "Module 8 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 7](labs/lab07.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 7") %>% pull(formatted_date)` at 9pm
-   [Programming Project 7](project-7.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 7") %>% pull(formatted_date)` at 9pm


# Week 9 (`r schedule %>% filter(week_number == 9 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 08 (`r assignments %>% filter(assessment == "Quiz 08") %>% pull(formatted_date)`)

## Readings

-   [Dictionaries](data_structures_dict.html)

## Class slides

-   [intro to dictionaries](slides-09-01.html)
-   [`for x in list` loops](slides-09-02.html)

## Assignments

-   [Module 9 Programming Problems](assignments-09.html) -- Due date: `r assignments %>% filter(assessment == "Module 9 Programming Problems") %>% pull(formatted_date)` at 9pm


# Week 10 (`r schedule %>% filter(week_number == 10 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 09 (`r assignments %>% filter(assessment == "Quiz 09") %>% pull(formatted_date)`)

## Readings

-   [File Reading and Writing](io.html)

## Class slides

-   [files](slides-10-01.html)
-   [files and strings](slides-10-02.html)

## Assignments

-   [Module 10 Programming Problems](assignments-10.html) -- Due date: `r assignments %>% filter(assessment == "Module 10 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 8](labs/lab08.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 8") %>% pull(formatted_date)` at 9pm
-   [Programming Project 8](project-8.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 8") %>% pull(formatted_date)` at 9pm


# Week 11 (`r schedule %>% filter(week_number == 11 & term == "fall 2025") %>% pull(formatted_start)`)

## Midterm 2 (`r assignments %>% filter(assessment == "Midterm 2") %>% pull(formatted_date)`)

## Readings

-   [Tuples](data_structures_tuples.html)

## Class slides

-   [returning tuples](slides-11-01.html)
-   [tuple as argument](slides-11-02.html)

## Assignments
-   [Module 11 Programming Problems](assignments-11.html) -- Due date: `r assignments %>% filter(assessment == "Module 11 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 9](labs/lab09.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 9") %>% pull(formatted_date)` at 9pm
-   [Programming Project 9](project-9.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 9") %>% pull(formatted_date)` at 9pm


# Week 12 (`r schedule %>% filter(week_number == 12 & term == "fall 2025") %>% pull(formatted_start)`)

## Class slides

-   [2D lists and nested for loops](slides-12-01.html)
-   [nested for loops](slides-12-02.html)

## Assignments

-   [Module 12 Programming Problems](assignments-12.html) -- Due date: `r assignments %>% filter(assessment == "Module 12 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 10](labs/lab10.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 10") %>% pull(formatted_date)` at 9pm
-   [Programming Project 10](project-10.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 10") %>% pull(formatted_date)` at 9pm


# Week 13 (`r schedule %>% filter(week_number == 13 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 10 (`r assignments %>% filter(assessment == "Quiz 10") %>% pull(formatted_date)`)

## Readings
-   [Sets](data_structures_sets.html)

## Class slides

-   [data structures -- review](slides-13-01.html)
-   [intro to sets](slides-13-02.html)
-   [sets](slides-13-03.html)

## Assignments

-   [Module 13 Programming Problems](assignments-13.html) -- Due date: `r assignments %>% filter(assessment == "Module 13 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 11](labs/lab11.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 11") %>% pull(formatted_date)` at 9pm
-   [Programming Project 11](project-10.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 11") %>% pull(formatted_date)` at 9pm

# Week 14 (`r schedule %>% filter(week_number == 14 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 11 (`r assignments %>% filter(assessment == "Quiz 11") %>% pull(formatted_date)`)

## Readings

-   [Review of Data Structures](structures-review.html)

## Class slides

-   [mutating lists](slides-14-01.html)
-   [mutating dictionaries](slides-14-02.html)

## Assignments

-   [Module 14 Programming Problems](assignments-14.html) -- Due date: `r assignments %>% filter(assessment == "Module 14 Programming Problems") %>% pull(formatted_date)` at 9pm
-   [Short Project 12](labs/lab12.html) -- Due date: `r assignments %>% filter(assessment == "Short Programming Project 12") %>% pull(formatted_date)` at 9pm
-   [Programming Project 12](project-12.html) -- Due date: `r assignments %>% filter(assessment == "Programming Project 12") %>% pull(formatted_date)` at 9pm

# Week 15 (`r schedule %>% filter(week_number == 15 & term == "fall 2025") %>% pull(formatted_start)`)

## Quiz 12 (`r assignments %>% filter(assessment == "Quiz 12") %>% pull(formatted_date)`)

## Readings

-   [Review of Data Structures](structures-review.html)

## Class slides

-   [mutating lists](slides-14-01.html)
-   [mutating dictionaries](slides-14-02.html)


# Week 16 (`r schedule %>% filter(week_number == 15 & term == "fall 2025") %>% pull(formatted_start)`)

## Readings

-   [Handling Exceptions](exceptions.html)

## Class slides

-   [handling exceptions](slides-15-01.html)



