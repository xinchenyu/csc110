---
title: "python basics (slides)"
format: revealjs
slide-number: true
---

# CSc 110 Python Basics


## Announcements

-   Sign-up for your lab session at [xinchenyu.github.io/csc110/short-projects.html](https://xinchenyu.github.io/csc110/short-projects.html)
-   Full schedule for office hours can be found at [xinchenyu.github.io/csc110/tas.html](https://xinchenyu.github.io/csc110/tas.html)

## Did you set up your workspace?

-   Did you download Python 3?
-   Did you download VS Code (or PyCharm, or Mu)?
-   If not, that's fine, you can use [vscode.dev](https://vscode.dev/)

# What is a program?

## The `print` function

-   What does the print function do?

## The `print` function

-   `print()` sends characters (strings) to the **standard output**
-   By default, the **standard output** of a python program goes to the console.

```{python}
#| echo: true
print("some characters")
```

<br />

```{python}
#| echo: true
print('some characters')
```

## String operations

String concatenation:

-   What will the standard output display when the code below is run?

```{python}
#| echo: true
#| eval: false
print("hello" + "world")
```

## String operations

In your groups, try the following operations:

-   String repetition: `"abc" * 4`
-   String concatenation with `+` and `,`. What is the difference?
-   Combine both repetition and concatenation to print the following:

```{python}
#| echo: false
#| eval: true
print("They sang", "Aa" * 10)
```

## String operations 

solution 1:
```{python}
#| echo: true
#| eval: true
print("They sang", "Aa" * 10)
```

solution 2:
```{python}
#| echo: true
#| eval: true
print("They", "sang", "Aa" * 10)
```

solution 3:
```{python}
#| echo: true
#| eval: true
print("They" + " "  + "sang" + " " + "Aa" * 10)
```

## Multiple `print` statements

-   What will the standard output display when the code below is run?

```{python}
#| echo: true
#| eval: false
print('Are')
print('You')
print('In')
print('College?')
```

## Multiple `print` statements

-   By default, the `print` function moves the cursor to the next line after printing, unless you specify otherwise.

```{python}
#| echo: true
#| eval: true
print('Are', end = ' ')
print('You', end = ' ')
print('In', end = ' ')
print('College?', end = ' ')
```

What other characters can you use for values for the `end` parameter?

## Dealing with special characters

Write a simple program that prints the following output to the python console:

<br />

```{=html}
<pre style="font-size: 30px">

   He said, "What's up?" 
   Joe's friend didn't reply.

</pre>
```

## Dealing with special characters 

double quotes:
```{python}
#| echo: true
#| eval: true
print("He said, \"What's up?\"")
print("Joe's friend didn't reply.")
```

single quotes:
```{python}
#| echo: true
#| eval: true
print('He said, "What\'s up?"')
print('Joe\'s friend didn\'t reply.')
```

# Variables

## Variables and assignment

-   Variables are names in a program that represent a stored value
-   We can assign names to particular values in our program
-   When we give a value a name, or update the value stored in a variable, this is called assigning a variable

## Demonstration of variable assignment

Variable assignment does not produce any output to the console. Run the following code:

```{python}
#| echo: true
#| eval: false
first_name = "Mary"
family_name = "Silva"
```

How would we print these variables?

## Variables improve readability

Without variables:
```{python}
#| echo: true
#| eval: true
print("The total price is", 100 * 1.08)
```

With variables:
```{python}
#| echo: true
#| eval: true
base_price = 100
tax_rate = 1.08
total_price = base_price * tax_rate
print("The total price is", total_price)
```

