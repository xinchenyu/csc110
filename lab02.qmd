---
title: "Short Project 2"
format:
  html:
    embed-resources: true
---

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
assignments <- read_excel("assessment_schedule.xlsx") %>% 
  mutate(formatted_date = format(due_date, "%A, %B %d, %Y"))
```

**Due date: `r assignments %>% filter(assessment == "Short Programming Project 2") %>% pull(formatted_date)` at 9pm**

# Print lyrics

In this short project you will write a program that prints the lyrics for the nursery rhyme The Itsy Bitsy Spider. Here is the lyrics:

<pre>
The itsy bitsy spider climbed up the waterspout.
Down came the rain and washed the spider out.
Out came the sun and dried up all the rain.
The itsy bitsy spider climbed up the waterspout.

The big hairy spider climbed up the waterspout.
Down came the rain and washed the spider out.
Out came the sun and dried up all the rain.
The big hairy spider climbed up the waterspout.

The teeny tiny spider climbed up the waterspout.
Down came the rain and washed the spider out.
Out came the sun and dried up all the rain.
The teeny tiny spider climbed up the waterspout.
</pre>

Name the program `spider.py`. Make sure that gradescope gives you the points for passing the test cases.

## A bad solution
```{python}
#| eval: false
#| echo: true
def main():
    print("The itsy bitsy spider climbed up the waterspout.")
    print("Down came the rain and washed the spider out.")
    print("Out came the sun and dried up all the rain.")
    print("The itsy bitsy spider climbed up the waterspout.")
    print()

    print("The big hairy spider climbed up the waterspout.")
    print("Down came the rain and washed the spider out.")
    print("Out came the sun and dried up all the rain.")
    print("The big hairy spider climbed up the waterspout.")
    print()

    print("The teeny tiny spider climbed up the waterspout.")
    print("Down came the rain and washed the spider out.")
    print("Out came the sun and dried up all the rain.")
    print("The teeny tiny spider climbed up the waterspout.")
    print()
    
main()
```

## Development strategy

Each paragraph mentions one spider. This lyrics includes three types of spiders: `"itsy bitsy"`, `"big hairy"`, and `"teeny tiny"`. You can define your own functions and call your functions within `verse` function. Note the `verse` function can only take one of the three arguments (e.g., `"big hairy"`).

```{python}
#| eval: false
#| echo: true
# All your functions are defined here

def verse(spider_type):
    # write your code here

if __name__ == '__main__':
    verse("itsy bitsy")
    verse("big hairy")
    verse("teeny tiny")
```

::: {.callout-tip title="Before You Begin"}

This section gives you a quick recap of what we covered in class or introduces any new tips or examples that might help you complete the assignment. Take a few minutes to read through it before you begin.

## Writing a function

* Start with `def` followed by the name of the function
* Add parameters inside the parentheses in the function definition
* Print a string within the function without return

```{python}
#| echo: true
def print_greeting(name):
  print("Hello " + name + "!")

def main():
  print_greeting("Mickey")
  print_greeting("Minnie")

main()
```


## Using `format()`


```{python}
#| echo: true
#| eval: true
age = 20
name = 'Philip'
```

Here's how we can do concatenation using the  `+` operator:

```{python}
#| echo: true
#| eval: true
name + ' is ' + str(age) + ' years old'
```

We can do the same with the `.format()` method, using `{}` as place holders for our variables:

```{python}
#| echo: true
#| eval: true
'{} is {} years old'.format(name, age)
```



::: 